"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Env_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Env"));
const databaseConfig = {
    connection: Env_1.default.get('DB_CONNECTION'),
    connections: {
        pg: {
            client: 'pg',
            connection: {
                host: Env_1.default.get('PG_HOST', '127.0.0.1'),
                port: Number(Env_1.default.get('PG_PORT', 5432)),
                user: Env_1.default.get('PG_USER', 'postgres'),
                password: Env_1.default.get('PG_PASSWORD', '2080sPostgres'),
                database: Env_1.default.get('PG_DB_NAME', 'dbFinaltest'),
            },
            healthCheck: true,
            debug: false,
        },
    },
    orm: {},
};
exports.default = databaseConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWJhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkYXRhYmFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQU9BLGdGQUFzQztBQUl0QyxNQUFNLGNBQWMsR0FBaUQ7SUFXbkUsVUFBVSxFQUFFLGFBQUcsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDO0lBRXBDLFdBQVcsRUFBRTtRQVlYLEVBQUUsRUFBRTtZQUNGLE1BQU0sRUFBRSxJQUFJO1lBQ1osVUFBVSxFQUFFO2dCQUNWLElBQUksRUFBRSxhQUFHLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBQyxXQUFXLENBQVc7Z0JBQzlDLElBQUksRUFBRSxNQUFNLENBQUMsYUFBRyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3JDLElBQUksRUFBRSxhQUFHLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBQyxVQUFVLENBQVc7Z0JBQzdDLFFBQVEsRUFBRSxhQUFHLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxlQUFlLENBQVc7Z0JBQzNELFFBQVEsRUFBRSxhQUFHLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBQyxhQUFhLENBQVc7YUFDeEQ7WUFDRCxXQUFXLEVBQUUsSUFBSTtZQUNqQixLQUFLLEVBQUUsS0FBSztTQUNiO0tBR0Y7SUFjRCxHQUFHLEVBQUUsRUFDSjtDQUNGLENBQUE7QUFFRCxrQkFBZSxjQUFjLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbmZpZyBzb3VyY2U6IGh0dHBzOi8vZ2l0LmlvL0plc1Y5XG4gKlxuICogRmVlbCBmcmVlIHRvIGxldCB1cyBrbm93IHZpYSBQUiwgaWYgeW91IGZpbmQgc29tZXRoaW5nIGJyb2tlbiBpbiB0aGlzIGNvbmZpZ1xuICogZmlsZS5cbiAqL1xuXG5pbXBvcnQgRW52IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvRW52J1xuaW1wb3J0IHsgT3JtQ29uZmlnIH0gZnJvbSAnQGlvYzpBZG9uaXMvTHVjaWQvT3JtJ1xuaW1wb3J0IHsgRGF0YWJhc2VDb25maWcgfSBmcm9tICdAaW9jOkFkb25pcy9MdWNpZC9EYXRhYmFzZSdcblxuY29uc3QgZGF0YWJhc2VDb25maWc6IERhdGFiYXNlQ29uZmlnICYgeyBvcm06IFBhcnRpYWw8T3JtQ29uZmlnPiB9ID0ge1xuICAvKlxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfCBDb25uZWN0aW9uXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8XG4gIHwgVGhlIHByaW1hcnkgY29ubmVjdGlvbiBmb3IgbWFraW5nIGRhdGFiYXNlIHF1ZXJpZXMgYWNyb3NzIHRoZSBhcHBsaWNhdGlvblxuICB8IFlvdSBjYW4gdXNlIGFueSBrZXkgZnJvbSB0aGUgYGNvbm5lY3Rpb25zYCBvYmplY3QgZGVmaW5lZCBpbiB0aGlzIHNhbWVcbiAgfCBmaWxlLlxuICB8XG4gICovXG4gIGNvbm5lY3Rpb246IEVudi5nZXQoJ0RCX0NPTk5FQ1RJT04nKSxcblxuICBjb25uZWN0aW9uczoge1xuICAgIC8qXG4gICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgfCBQb3N0Z3JlU1FMIGNvbmZpZ1xuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHxcbiAgICB8IENvbmZpZ3VyYXRpb24gZm9yIFBvc3RncmVTUUwgZGF0YWJhc2UuIE1ha2Ugc3VyZSB0byBpbnN0YWxsIHRoZSBkcml2ZXJcbiAgICB8IGZyb20gbnBtIHdoZW4gdXNpbmcgdGhpcyBjb25uZWN0aW9uXG4gICAgfFxuICAgIHwgbnBtIGkgcGdcbiAgICB8XG4gICAgKi9cbiAgICBwZzoge1xuICAgICAgY2xpZW50OiAncGcnLFxuICAgICAgY29ubmVjdGlvbjoge1xuICAgICAgICBob3N0OiBFbnYuZ2V0KCdQR19IT1NUJywnMTI3LjAuMC4xJykgYXMgc3RyaW5nLFxuICAgICAgICBwb3J0OiBOdW1iZXIoRW52LmdldCgnUEdfUE9SVCcsNTQzMikpLFxuICAgICAgICB1c2VyOiBFbnYuZ2V0KCdQR19VU0VSJywncG9zdGdyZXMnKSBhcyBzdHJpbmcsXG4gICAgICAgIHBhc3N3b3JkOiBFbnYuZ2V0KCdQR19QQVNTV09SRCcsICcyMDgwc1Bvc3RncmVzJykgYXMgc3RyaW5nLFxuICAgICAgICBkYXRhYmFzZTogRW52LmdldCgnUEdfREJfTkFNRScsJ2RiRmluYWx0ZXN0JykgYXMgc3RyaW5nLFxuICAgICAgfSxcbiAgICAgIGhlYWx0aENoZWNrOiB0cnVlLFxuICAgICAgZGVidWc6IGZhbHNlLFxuICAgIH0sXG5cblxuICB9LFxuXG4gIC8qXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8IE9STSBDb25maWd1cmF0aW9uXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8XG4gIHwgRm9sbG93aW5nIGFyZSBzb21lIG9mIHRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgdG8gdHdlYWsgdGhlIGNvbnZlbnRpb25hbFxuICB8IHNldHRpbmdzIG9mIHRoZSBPUk0uIEZvciBleGFtcGxlOlxuICB8XG4gIHwgLSBEZWZpbmUgYSBjdXN0b20gZnVuY3Rpb24gdG8gY29tcHV0ZSB0aGUgZGVmYXVsdCB0YWJsZSBuYW1lIGZvciBhIGdpdmVuIG1vZGVsLlxuICB8IC0gT3IgZGVmaW5lIGEgY3VzdG9tIGZ1bmN0aW9uIHRvIGNvbXB1dGUgdGhlIHByaW1hcnkga2V5IGZvciBhIGdpdmVuIG1vZGVsLlxuICB8XG4gICovXG4gIG9ybToge1xuICB9LFxufVxuXG5leHBvcnQgZGVmYXVsdCBkYXRhYmFzZUNvbmZpZ1xuIl19