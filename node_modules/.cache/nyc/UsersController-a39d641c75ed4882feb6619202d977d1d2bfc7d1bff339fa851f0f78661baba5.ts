"use strict";function cov_us11stjff(){var path="D:\\Documents\\Universidad Nacional de Colombia\\2023 - 1\\BOOTCAMP_BACKEND\\Final-Test\\app\\Controllers\\Http\\UsersController.ts";var hash="c2813a058cb586938319238a9a1519a222a28dc9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Documents\\Universidad Nacional de Colombia\\2023 - 1\\BOOTCAMP_BACKEND\\Final-Test\\app\\Controllers\\Http\\UsersController.ts",statementMap:{"0":{start:{line:2,column:22},end:{line:4,column:1}},"1":{start:{line:3,column:4},end:{line:3,column:62}},"2":{start:{line:5,column:0},end:{line:5,column:62}},"3":{start:{line:6,column:15},end:{line:6,column:80}},"4":{start:{line:7,column:17},end:{line:7,column:36}},"5":{start:{line:8,column:14},end:{line:8,column:79}},"6":{start:{line:9,column:23},end:{line:9,column:63}},"7":{start:{line:10,column:14},end:{line:10,column:78}},"8":{start:{line:13,column:22},end:{line:13,column:44}},"9":{start:{line:14,column:25},end:{line:14,column:50}},"10":{start:{line:15,column:8},end:{line:45,column:9}},"11":{start:{line:16,column:25},end:{line:16,column:68}},"12":{start:{line:17,column:12},end:{line:19,column:13}},"13":{start:{line:18,column:16},end:{line:18,column:95}},"14":{start:{line:20,column:34},end:{line:20,column:79}},"15":{start:{line:21,column:12},end:{line:23,column:13}},"16":{start:{line:22,column:16},end:{line:22,column:98}},"17":{start:{line:24,column:28},end:{line:28,column:13}},"18":{start:{line:29,column:26},end:{line:29,column:58}},"19":{start:{line:30,column:29},end:{line:30,column:74}},"20":{start:{line:31,column:12},end:{line:33,column:13}},"21":{start:{line:32,column:16},end:{line:32,column:79}},"22":{start:{line:34,column:12},end:{line:34,column:54}},"23":{start:{line:35,column:12},end:{line:41,column:15}},"24":{start:{line:44,column:12},end:{line:44,column:83}},"25":{start:{line:48,column:25},end:{line:48,column:49}},"26":{start:{line:49,column:8},end:{line:49,column:99}},"27":{start:{line:52,column:20},end:{line:52,column:53}},"28":{start:{line:53,column:8},end:{line:58,column:11}},"29":{start:{line:54,column:12},end:{line:57,column:13}},"30":{start:{line:55,column:16},end:{line:55,column:56}},"31":{start:{line:56,column:16},end:{line:56,column:50}},"32":{start:{line:59,column:8},end:{line:59,column:20}},"33":{start:{line:62,column:8},end:{line:83,column:9}},"34":{start:{line:63,column:30},end:{line:63,column:43}},"35":{start:{line:64,column:28},end:{line:64,column:48}},"36":{start:{line:65,column:12},end:{line:65,column:53}},"37":{start:{line:66,column:12},end:{line:66,column:55}},"38":{start:{line:67,column:12},end:{line:67,column:48}},"39":{start:{line:68,column:12},end:{line:68,column:62}},"40":{start:{line:69,column:12},end:{line:69,column:59}},"41":{start:{line:70,column:12},end:{line:70,column:63}},"42":{start:{line:71,column:12},end:{line:71,column:44}},"43":{start:{line:72,column:25},end:{line:72,column:47}},"44":{start:{line:73,column:12},end:{line:73,column:75}},"45":{start:{line:74,column:12},end:{line:74,column:65}},"46":{start:{line:75,column:12},end:{line:75,column:44}},"47":{start:{line:76,column:12},end:{line:76,column:33}},"48":{start:{line:77,column:12},end:{line:77,column:33}},"49":{start:{line:78,column:12},end:{line:78,column:109}},"50":{start:{line:81,column:12},end:{line:81,column:37}},"51":{start:{line:82,column:12},end:{line:82,column:115}},"52":{start:{line:86,column:8},end:{line:93,column:9}},"53":{start:{line:87,column:27},end:{line:87,column:185}},"54":{start:{line:88,column:12},end:{line:88,column:118}},"55":{start:{line:91,column:12},end:{line:91,column:36}},"56":{start:{line:92,column:12},end:{line:92,column:114}},"57":{start:{line:96,column:24},end:{line:96,column:48}},"58":{start:{line:97,column:26},end:{line:97,column:39}},"59":{start:{line:98,column:8},end:{line:118,column:9}},"60":{start:{line:99,column:12},end:{line:111,column:15}},"61":{start:{line:112,column:12},end:{line:114,column:15}},"62":{start:{line:117,column:12},end:{line:117,column:99}},"63":{start:{line:121,column:19},end:{line:121,column:43}},"64":{start:{line:122,column:8},end:{line:128,column:9}},"65":{start:{line:123,column:25},end:{line:123,column:189}},"66":{start:{line:124,column:12},end:{line:124,column:51}},"67":{start:{line:127,column:12},end:{line:127,column:121}},"68":{start:{line:131,column:20},end:{line:131,column:53}},"69":{start:{line:132,column:24},end:{line:132,column:125}},"70":{start:{line:133,column:8},end:{line:133,column:23}},"71":{start:{line:136,column:0},end:{line:136,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:56},end:{line:2,column:57}},loc:{start:{line:2,column:71},end:{line:4,column:1}},line:2},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:39},end:{line:46,column:5}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:47,column:4},end:{line:47,column:5}},loc:{start:{line:47,column:32},end:{line:50,column:5}},line:47},"3":{name:"(anonymous_3)",decl:{start:{line:51,column:4},end:{line:51,column:5}},loc:{start:{line:51,column:46},end:{line:60,column:5}},line:51},"4":{name:"(anonymous_4)",decl:{start:{line:53,column:82},end:{line:53,column:83}},loc:{start:{line:53,column:89},end:{line:58,column:9}},line:53},"5":{name:"(anonymous_5)",decl:{start:{line:61,column:4},end:{line:61,column:5}},loc:{start:{line:61,column:44},end:{line:84,column:5}},line:61},"6":{name:"(anonymous_6)",decl:{start:{line:85,column:4},end:{line:85,column:5}},loc:{start:{line:85,column:33},end:{line:94,column:5}},line:85},"7":{name:"(anonymous_7)",decl:{start:{line:95,column:4},end:{line:95,column:5}},loc:{start:{line:95,column:44},end:{line:119,column:5}},line:95},"8":{name:"(anonymous_8)",decl:{start:{line:120,column:4},end:{line:120,column:5}},loc:{start:{line:120,column:41},end:{line:129,column:5}},line:120},"9":{name:"(anonymous_9)",decl:{start:{line:130,column:4},end:{line:130,column:5}},loc:{start:{line:130,column:36},end:{line:134,column:5}},line:130}},branchMap:{"0":{loc:{start:{line:2,column:22},end:{line:4,column:1}},type:"binary-expr",locations:[{start:{line:2,column:23},end:{line:2,column:27}},{start:{line:2,column:31},end:{line:2,column:51}},{start:{line:2,column:56},end:{line:4,column:1}}],line:2},"1":{loc:{start:{line:3,column:11},end:{line:3,column:61}},type:"cond-expr",locations:[{start:{line:3,column:37},end:{line:3,column:40}},{start:{line:3,column:43},end:{line:3,column:61}}],line:3},"2":{loc:{start:{line:3,column:12},end:{line:3,column:33}},type:"binary-expr",locations:[{start:{line:3,column:12},end:{line:3,column:15}},{start:{line:3,column:19},end:{line:3,column:33}}],line:3},"3":{loc:{start:{line:17,column:12},end:{line:19,column:13}},type:"if",locations:[{start:{line:17,column:12},end:{line:19,column:13}},{start:{line:17,column:12},end:{line:19,column:13}}],line:17},"4":{loc:{start:{line:21,column:12},end:{line:23,column:13}},type:"if",locations:[{start:{line:21,column:12},end:{line:23,column:13}},{start:{line:21,column:12},end:{line:23,column:13}}],line:21},"5":{loc:{start:{line:31,column:12},end:{line:33,column:13}},type:"if",locations:[{start:{line:31,column:12},end:{line:33,column:13}},{start:{line:31,column:12},end:{line:33,column:13}}],line:31},"6":{loc:{start:{line:54,column:12},end:{line:57,column:13}},type:"if",locations:[{start:{line:54,column:12},end:{line:57,column:13}},{start:{line:54,column:12},end:{line:57,column:13}}],line:54}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},inputSourceMap:{version:3,file:"UsersController.js",sourceRoot:"",sources:["UsersController.ts"],names:[],mappings:"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",sourcesContent:["import type { HttpContextContract } from '@ioc:Adonis/Core/HttpContext'\nimport User from 'App/Models/User';\nconst bcryptjs = require('bcryptjs')\nimport Env from '@ioc:Adonis/Core/Env'\nimport jwt from 'jsonwebtoken'\nimport roles from 'App/Models/Rol';\n\nexport default class UsersContUserler {\n  public async login({ request, response }: HttpContextContract) {\n    const email = request.input('email')\n    const password = request.input('password')\n    try {\n      //consultar si existe usuario con ese correo\n      const user = await User.findBy('email',email)\n      if (!user) {\n        return response.status(400).json({state: false, message: \"email invalido.\" })\n      }\n\n      const validPassword = bcryptjs.compareSync(password, user.password)\n      if (!validPassword) {\n        return response.status(400).json({ msj: 'Los datos de acceso no son correctos' })\n      }\n\n      const payload ={\n        nombres: user.first_name,\n        id: user.id,\n        cedula: user.document_number,\n      }\n      const token = await this.generarToken(payload)\n\n\n      const user_rol = await roles.findBy('id',user.rol_id)\n      if(!user_rol){\n        return response.status(400).json({message: \"ROL NOT FOUND\"})\n      }\n\n      console.log(`token for test -> ${token}`)\n      response.status(200).json({\n        state: user.state,\n        id: user.id,\n        name: (user.first_name).concat(\" \",user.second_name,\" \",user.surname,\" \",user.second_sur_name),\n        role: user_rol.name,\n        msg: \"Ingreso exitoso\",\n      })\n    } catch (error) {\n      response.json({state: false, message: \"password or email invalid.\"})\n    }\n  }\n\n  private async generarToken(payload: any){\n    const opciones = {expiresIn: \"30 mins\"}\n    return jwt.sign(payload, Env.get('JWT_SECRET_KEY'), opciones)\n  }\n\n  public async verificarToken(authorizationHeader: string){\n    let token = authorizationHeader.split(' ')[1]\n    jwt.verify(token,Env.get('JWT_SECRET_KEY'), (e) =>{\n      if(e){\n        console.log(`e token expirado -> ${e}`)\n        throw new Error('Token expirado');\n      }\n    })\n    return true\n\n  }\n\n  public async createUser({request, response}: HttpContextContract){\n    try{\n      const data_User = request.all();\n      const UserObj = new User();\n      UserObj.first_name = data_User.firstName\n      UserObj.second_name = data_User.secondName\n      UserObj.surname = data_User.surname\n      UserObj.second_sur_name = data_User.secondSurName\n      UserObj.type_document = data_User.typeDocument\n      UserObj.document_number = data_User.documentNumber\n      UserObj.email = data_User.email\n\n      //Se encripta la contrasena con bcryptjs\n      const salt = bcryptjs.genSaltSync();\n      UserObj.password =  bcryptjs.hashSync(data_User.password,salt)\n\n      //No hay criterio para el rol, sera aleatorio, entre 1: admin o 2: estudiante\n      UserObj.rol_id = (Math.floor(Math.random()*2)+1)      //randint(1,2)\n      UserObj.phone = data_User.phone\n      UserObj.state = true      //Por default los usuarios creados estan habilitados para usarse\n\n      await UserObj.save();\n      return response.status(200).json({\"state\": true,\"message\": \"Estudiante creado exitosamente\"})\n    }catch(e){\n      console.log(`e -> ${e}`)\n      return response.status(500).json({\"state\": false, \"message\": \"Fallo en la creaci\xF3n del estudiante\"})\n    }\n  }\n\n  public async getUsers({response}: HttpContextContract){\n    try{\n      const L_User = await User.query().select('first_name','second_name','surname','second_sur_name','type_document','document_number','email','phone').where({});\n      return response.status(200).json({\"state\": true,\"message\": \"Listado de estudiantes\", \"users\": L_User})\n    }catch(e){\n      console.log(`e-> ${e}`)\n      return response.status(500).json({\"state\": false, \"message\": \"Fallo en el listado de estudiantes\"})\n    }\n  }\n\n  public async updateUser({request,response}: HttpContextContract){\n    const id_User=request.param('id_user');\n    const data_User = request.all();\n    try{\n      await User.query().where('id',id_User).update({\n        first_name: data_User.firstName,\n        second_name: data_User.secondName,\n        surname: data_User.surname,\n        second_sur_name: data_User.secondSurName,\n        type_document: data_User.typeDocument,\n        document_number: data_User.documentNumber,\n        email: data_User.email,\n        password: data_User.password,\n        rol_id: data_User.rolId,\n        phone: data_User.phone,\n        state: data_User.state\n    });\n    return response.status(200).json( {\n      \"state\": true, \"message\": \"Se actualizo correctamente\"})\n    }catch(e){\n      return response.status(500).json({\"state\": false,\"message\": \"Error al actualizar\"})\n    }\n  }\n\n  public async getUser({request,response}: HttpContextContract){\n    const id = request.param('id_user')\n    try{\n      const user = await User.query().select('first_name','second_name','surname','second_sur_name','type_document','document_number','email','phone').where('id',id)\n      return response.status(200).json(user)\n    }catch(e){\n      return response.status(500).json({\"state\": false,\"message\": \"Error al consultar el detalle del usuario\"})\n    }\n  }\n\n\n  public getPayload(authorizationHeader:string) {\n    let token = authorizationHeader.split(' ')[1]\n    const payload = jwt.verify(token, Env.get(\"JWT_SECRET_KEY\"), {complete: true}).payload\n    return payload\n  }\n\n\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c2813a058cb586938319238a9a1519a222a28dc9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_us11stjff=function(){return actualCoverage;};}return actualCoverage;}cov_us11stjff();var __importDefault=(cov_us11stjff().s[0]++,(cov_us11stjff().b[0][0]++,this)&&(cov_us11stjff().b[0][1]++,this.__importDefault)||(cov_us11stjff().b[0][2]++,function(mod){cov_us11stjff().f[0]++;cov_us11stjff().s[1]++;return(cov_us11stjff().b[2][0]++,mod)&&(cov_us11stjff().b[2][1]++,mod.__esModule)?(cov_us11stjff().b[1][0]++,mod):(cov_us11stjff().b[1][1]++,{"default":mod});}));cov_us11stjff().s[2]++;Object.defineProperty(exports,"__esModule",{value:true});const User_1=(cov_us11stjff().s[3]++,__importDefault(global[Symbol.for('ioc.use')]("App/Models/User")));const bcryptjs=(cov_us11stjff().s[4]++,require('bcryptjs'));const Env_1=(cov_us11stjff().s[5]++,__importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Env")));const jsonwebtoken_1=(cov_us11stjff().s[6]++,__importDefault(require("jsonwebtoken")));const Rol_1=(cov_us11stjff().s[7]++,__importDefault(global[Symbol.for('ioc.use')]("App/Models/Rol")));class UsersContUserler{async login({request,response}){cov_us11stjff().f[1]++;const email=(cov_us11stjff().s[8]++,request.input('email'));const password=(cov_us11stjff().s[9]++,request.input('password'));cov_us11stjff().s[10]++;try{const user=(cov_us11stjff().s[11]++,await User_1.default.findBy('email',email));cov_us11stjff().s[12]++;if(!user){cov_us11stjff().b[3][0]++;cov_us11stjff().s[13]++;return response.status(400).json({state:false,message:"email invalido."});}else{cov_us11stjff().b[3][1]++;}const validPassword=(cov_us11stjff().s[14]++,bcryptjs.compareSync(password,user.password));cov_us11stjff().s[15]++;if(!validPassword){cov_us11stjff().b[4][0]++;cov_us11stjff().s[16]++;return response.status(400).json({msj:'Los datos de acceso no son correctos'});}else{cov_us11stjff().b[4][1]++;}const payload=(cov_us11stjff().s[17]++,{nombres:user.first_name,id:user.id,cedula:user.document_number});const token=(cov_us11stjff().s[18]++,await this.generarToken(payload));const user_rol=(cov_us11stjff().s[19]++,await Rol_1.default.findBy('id',user.rol_id));cov_us11stjff().s[20]++;if(!user_rol){cov_us11stjff().b[5][0]++;cov_us11stjff().s[21]++;return response.status(400).json({message:"ROL NOT FOUND"});}else{cov_us11stjff().b[5][1]++;}cov_us11stjff().s[22]++;console.log(`token for test -> ${token}`);cov_us11stjff().s[23]++;response.status(200).json({state:user.state,id:user.id,name:user.first_name.concat(" ",user.second_name," ",user.surname," ",user.second_sur_name),role:user_rol.name,msg:"Ingreso exitoso"});}catch(error){cov_us11stjff().s[24]++;response.json({state:false,message:"password or email invalid."});}}async generarToken(payload){cov_us11stjff().f[2]++;const opciones=(cov_us11stjff().s[25]++,{expiresIn:"30 mins"});cov_us11stjff().s[26]++;return jsonwebtoken_1.default.sign(payload,Env_1.default.get('JWT_SECRET_KEY'),opciones);}async verificarToken(authorizationHeader){cov_us11stjff().f[3]++;let token=(cov_us11stjff().s[27]++,authorizationHeader.split(' ')[1]);cov_us11stjff().s[28]++;jsonwebtoken_1.default.verify(token,Env_1.default.get('JWT_SECRET_KEY'),e=>{cov_us11stjff().f[4]++;cov_us11stjff().s[29]++;if(e){cov_us11stjff().b[6][0]++;cov_us11stjff().s[30]++;console.log(`e token expirado -> ${e}`);cov_us11stjff().s[31]++;throw new Error('Token expirado');}else{cov_us11stjff().b[6][1]++;}});cov_us11stjff().s[32]++;return true;}async createUser({request,response}){cov_us11stjff().f[5]++;cov_us11stjff().s[33]++;try{const data_User=(cov_us11stjff().s[34]++,request.all());const UserObj=(cov_us11stjff().s[35]++,new User_1.default());cov_us11stjff().s[36]++;UserObj.first_name=data_User.firstName;cov_us11stjff().s[37]++;UserObj.second_name=data_User.secondName;cov_us11stjff().s[38]++;UserObj.surname=data_User.surname;cov_us11stjff().s[39]++;UserObj.second_sur_name=data_User.secondSurName;cov_us11stjff().s[40]++;UserObj.type_document=data_User.typeDocument;cov_us11stjff().s[41]++;UserObj.document_number=data_User.documentNumber;cov_us11stjff().s[42]++;UserObj.email=data_User.email;const salt=(cov_us11stjff().s[43]++,bcryptjs.genSaltSync());cov_us11stjff().s[44]++;UserObj.password=bcryptjs.hashSync(data_User.password,salt);cov_us11stjff().s[45]++;UserObj.rol_id=Math.floor(Math.random()*2)+1;cov_us11stjff().s[46]++;UserObj.phone=data_User.phone;cov_us11stjff().s[47]++;UserObj.state=true;cov_us11stjff().s[48]++;await UserObj.save();cov_us11stjff().s[49]++;return response.status(200).json({"state":true,"message":"Estudiante creado exitosamente"});}catch(e){cov_us11stjff().s[50]++;console.log(`e -> ${e}`);cov_us11stjff().s[51]++;return response.status(500).json({"state":false,"message":"Fallo en la creación del estudiante"});}}async getUsers({response}){cov_us11stjff().f[6]++;cov_us11stjff().s[52]++;try{const L_User=(cov_us11stjff().s[53]++,await User_1.default.query().select('first_name','second_name','surname','second_sur_name','type_document','document_number','email','phone').where({}));cov_us11stjff().s[54]++;return response.status(200).json({"state":true,"message":"Listado de estudiantes","users":L_User});}catch(e){cov_us11stjff().s[55]++;console.log(`e-> ${e}`);cov_us11stjff().s[56]++;return response.status(500).json({"state":false,"message":"Fallo en el listado de estudiantes"});}}async updateUser({request,response}){cov_us11stjff().f[7]++;const id_User=(cov_us11stjff().s[57]++,request.param('id_user'));const data_User=(cov_us11stjff().s[58]++,request.all());cov_us11stjff().s[59]++;try{cov_us11stjff().s[60]++;await User_1.default.query().where('id',id_User).update({first_name:data_User.firstName,second_name:data_User.secondName,surname:data_User.surname,second_sur_name:data_User.secondSurName,type_document:data_User.typeDocument,document_number:data_User.documentNumber,email:data_User.email,password:data_User.password,rol_id:data_User.rolId,phone:data_User.phone,state:data_User.state});cov_us11stjff().s[61]++;return response.status(200).json({"state":true,"message":"Se actualizo correctamente"});}catch(e){cov_us11stjff().s[62]++;return response.status(500).json({"state":false,"message":"Error al actualizar"});}}async getUser({request,response}){cov_us11stjff().f[8]++;const id=(cov_us11stjff().s[63]++,request.param('id_user'));cov_us11stjff().s[64]++;try{const user=(cov_us11stjff().s[65]++,await User_1.default.query().select('first_name','second_name','surname','second_sur_name','type_document','document_number','email','phone').where('id',id));cov_us11stjff().s[66]++;return response.status(200).json(user);}catch(e){cov_us11stjff().s[67]++;return response.status(500).json({"state":false,"message":"Error al consultar el detalle del usuario"});}}getPayload(authorizationHeader){cov_us11stjff().f[9]++;let token=(cov_us11stjff().s[68]++,authorizationHeader.split(' ')[1]);const payload=(cov_us11stjff().s[69]++,jsonwebtoken_1.default.verify(token,Env_1.default.get("JWT_SECRET_KEY"),{complete:true}).payload);cov_us11stjff().s[70]++;return payload;}}cov_us11stjff().s[71]++;exports.default=UsersContUserler;//# sourceMappingURL=data:application/json;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,