"use strict";function cov_1yxe2fmbkt(){var path="D:\\Documents\\Universidad Nacional de Colombia\\2023 - 1\\BOOTCAMP_BACKEND\\Final-Test\\config\\database.ts";var hash="afb627d769bc3b37a0a0207adfc5e2121eae6d5e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Documents\\Universidad Nacional de Colombia\\2023 - 1\\BOOTCAMP_BACKEND\\Final-Test\\config\\database.ts",statementMap:{"0":{start:{line:2,column:22},end:{line:4,column:1}},"1":{start:{line:3,column:4},end:{line:3,column:62}},"2":{start:{line:5,column:0},end:{line:5,column:62}},"3":{start:{line:6,column:14},end:{line:6,column:79}},"4":{start:{line:7,column:23},end:{line:24,column:1}},"5":{start:{line:25,column:0},end:{line:25,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:56},end:{line:2,column:57}},loc:{start:{line:2,column:71},end:{line:4,column:1}},line:2}},branchMap:{"0":{loc:{start:{line:2,column:22},end:{line:4,column:1}},type:"binary-expr",locations:[{start:{line:2,column:23},end:{line:2,column:27}},{start:{line:2,column:31},end:{line:2,column:51}},{start:{line:2,column:56},end:{line:4,column:1}}],line:2},"1":{loc:{start:{line:3,column:11},end:{line:3,column:61}},type:"cond-expr",locations:[{start:{line:3,column:37},end:{line:3,column:40}},{start:{line:3,column:43},end:{line:3,column:61}}],line:3},"2":{loc:{start:{line:3,column:12},end:{line:3,column:33}},type:"binary-expr",locations:[{start:{line:3,column:12},end:{line:3,column:15}},{start:{line:3,column:19},end:{line:3,column:33}}],line:3}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0]},inputSourceMap:{version:3,file:"database.js",sourceRoot:"",sources:["database.ts"],names:[],mappings:";;;;;AAOA,gFAAsC;AAItC,MAAM,cAAc,GAAiD;IAWnE,UAAU,EAAE,aAAG,CAAC,GAAG,CAAC,eAAe,CAAC;IAEpC,WAAW,EAAE;QAYX,EAAE,EAAE;YACF,MAAM,EAAE,IAAI;YACZ,UAAU,EAAE;gBACV,IAAI,EAAE,aAAG,CAAC,GAAG,CAAC,SAAS,EAAC,WAAW,CAAW;gBAC9C,IAAI,EAAE,MAAM,CAAC,aAAG,CAAC,GAAG,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;gBACrC,IAAI,EAAE,aAAG,CAAC,GAAG,CAAC,SAAS,EAAC,UAAU,CAAW;gBAC7C,QAAQ,EAAE,aAAG,CAAC,GAAG,CAAC,aAAa,EAAE,eAAe,CAAW;gBAC3D,QAAQ,EAAE,aAAG,CAAC,GAAG,CAAC,YAAY,EAAC,aAAa,CAAW;aACxD;YACD,WAAW,EAAE,IAAI;YACjB,KAAK,EAAE,KAAK;SACb;KAGF;IAcD,GAAG,EAAE,EACJ;CACF,CAAA;AAED,kBAAe,cAAc,CAAA",sourcesContent:["/**\n * Config source: https://git.io/JesV9\n *\n * Feel free to let us know via PR, if you find something broken in this config\n * file.\n */\n\nimport Env from '@ioc:Adonis/Core/Env'\nimport { OrmConfig } from '@ioc:Adonis/Lucid/Orm'\nimport { DatabaseConfig } from '@ioc:Adonis/Lucid/Database'\n\nconst databaseConfig: DatabaseConfig & { orm: Partial<OrmConfig> } = {\n  /*\n  |--------------------------------------------------------------------------\n  | Connection\n  |--------------------------------------------------------------------------\n  |\n  | The primary connection for making database queries across the application\n  | You can use any key from the `connections` object defined in this same\n  | file.\n  |\n  */\n  connection: Env.get('DB_CONNECTION'),\n\n  connections: {\n    /*\n    |--------------------------------------------------------------------------\n    | PostgreSQL config\n    |--------------------------------------------------------------------------\n    |\n    | Configuration for PostgreSQL database. Make sure to install the driver\n    | from npm when using this connection\n    |\n    | npm i pg\n    |\n    */\n    pg: {\n      client: 'pg',\n      connection: {\n        host: Env.get('PG_HOST','127.0.0.1') as string,\n        port: Number(Env.get('PG_PORT',5432)),\n        user: Env.get('PG_USER','postgres') as string,\n        password: Env.get('PG_PASSWORD', '2080sPostgres') as string,\n        database: Env.get('PG_DB_NAME','dbFinaltest') as string,\n      },\n      healthCheck: true,\n      debug: false,\n    },\n\n\n  },\n\n  /*\n  |--------------------------------------------------------------------------\n  | ORM Configuration\n  |--------------------------------------------------------------------------\n  |\n  | Following are some of the configuration options to tweak the conventional\n  | settings of the ORM. For example:\n  |\n  | - Define a custom function to compute the default table name for a given model.\n  | - Or define a custom function to compute the primary key for a given model.\n  |\n  */\n  orm: {\n  },\n}\n\nexport default databaseConfig\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"afb627d769bc3b37a0a0207adfc5e2121eae6d5e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1yxe2fmbkt=function(){return actualCoverage;};}return actualCoverage;}cov_1yxe2fmbkt();var __importDefault=(cov_1yxe2fmbkt().s[0]++,(cov_1yxe2fmbkt().b[0][0]++,this)&&(cov_1yxe2fmbkt().b[0][1]++,this.__importDefault)||(cov_1yxe2fmbkt().b[0][2]++,function(mod){cov_1yxe2fmbkt().f[0]++;cov_1yxe2fmbkt().s[1]++;return(cov_1yxe2fmbkt().b[2][0]++,mod)&&(cov_1yxe2fmbkt().b[2][1]++,mod.__esModule)?(cov_1yxe2fmbkt().b[1][0]++,mod):(cov_1yxe2fmbkt().b[1][1]++,{"default":mod});}));cov_1yxe2fmbkt().s[2]++;Object.defineProperty(exports,"__esModule",{value:true});const Env_1=(cov_1yxe2fmbkt().s[3]++,__importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Env")));const databaseConfig=(cov_1yxe2fmbkt().s[4]++,{connection:Env_1.default.get('DB_CONNECTION'),connections:{pg:{client:'pg',connection:{host:Env_1.default.get('PG_HOST','127.0.0.1'),port:Number(Env_1.default.get('PG_PORT',5432)),user:Env_1.default.get('PG_USER','postgres'),password:Env_1.default.get('PG_PASSWORD','2080sPostgres'),database:Env_1.default.get('PG_DB_NAME','dbFinaltest')},healthCheck:true,debug:false}},orm:{}});cov_1yxe2fmbkt().s[5]++;exports.default=databaseConfig;//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWJhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkYXRhYmFzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQU9BLGdGQUFzQztBQUl0QyxNQUFNLGNBQWMsR0FBaUQ7SUFXbkUsVUFBVSxFQUFFLGFBQUcsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDO0lBRXBDLFdBQVcsRUFBRTtRQVlYLEVBQUUsRUFBRTtZQUNGLE1BQU0sRUFBRSxJQUFJO1lBQ1osVUFBVSxFQUFFO2dCQUNWLElBQUksRUFBRSxhQUFHLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBQyxXQUFXLENBQVc7Z0JBQzlDLElBQUksRUFBRSxNQUFNLENBQUMsYUFBRyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3JDLElBQUksRUFBRSxhQUFHLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBQyxVQUFVLENBQVc7Z0JBQzdDLFFBQVEsRUFBRSxhQUFHLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxlQUFlLENBQVc7Z0JBQzNELFFBQVEsRUFBRSxhQUFHLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBQyxhQUFhLENBQVc7YUFDeEQ7WUFDRCxXQUFXLEVBQUUsSUFBSTtZQUNqQixLQUFLLEVBQUUsS0FBSztTQUNiO0tBR0Y7SUFjRCxHQUFHLEVBQUUsRUFDSjtDQUNGLENBQUE7QUFFRCxrQkFBZSxjQUFjLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbmZpZyBzb3VyY2U6IGh0dHBzOi8vZ2l0LmlvL0plc1Y5XG4gKlxuICogRmVlbCBmcmVlIHRvIGxldCB1cyBrbm93IHZpYSBQUiwgaWYgeW91IGZpbmQgc29tZXRoaW5nIGJyb2tlbiBpbiB0aGlzIGNvbmZpZ1xuICogZmlsZS5cbiAqL1xuXG5pbXBvcnQgRW52IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvRW52J1xuaW1wb3J0IHsgT3JtQ29uZmlnIH0gZnJvbSAnQGlvYzpBZG9uaXMvTHVjaWQvT3JtJ1xuaW1wb3J0IHsgRGF0YWJhc2VDb25maWcgfSBmcm9tICdAaW9jOkFkb25pcy9MdWNpZC9EYXRhYmFzZSdcblxuY29uc3QgZGF0YWJhc2VDb25maWc6IERhdGFiYXNlQ29uZmlnICYgeyBvcm06IFBhcnRpYWw8T3JtQ29uZmlnPiB9ID0ge1xuICAvKlxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfCBDb25uZWN0aW9uXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8XG4gIHwgVGhlIHByaW1hcnkgY29ubmVjdGlvbiBmb3IgbWFraW5nIGRhdGFiYXNlIHF1ZXJpZXMgYWNyb3NzIHRoZSBhcHBsaWNhdGlvblxuICB8IFlvdSBjYW4gdXNlIGFueSBrZXkgZnJvbSB0aGUgYGNvbm5lY3Rpb25zYCBvYmplY3QgZGVmaW5lZCBpbiB0aGlzIHNhbWVcbiAgfCBmaWxlLlxuICB8XG4gICovXG4gIGNvbm5lY3Rpb246IEVudi5nZXQoJ0RCX0NPTk5FQ1RJT04nKSxcblxuICBjb25uZWN0aW9uczoge1xuICAgIC8qXG4gICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgfCBQb3N0Z3JlU1FMIGNvbmZpZ1xuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHxcbiAgICB8IENvbmZpZ3VyYXRpb24gZm9yIFBvc3RncmVTUUwgZGF0YWJhc2UuIE1ha2Ugc3VyZSB0byBpbnN0YWxsIHRoZSBkcml2ZXJcbiAgICB8IGZyb20gbnBtIHdoZW4gdXNpbmcgdGhpcyBjb25uZWN0aW9uXG4gICAgfFxuICAgIHwgbnBtIGkgcGdcbiAgICB8XG4gICAgKi9cbiAgICBwZzoge1xuICAgICAgY2xpZW50OiAncGcnLFxuICAgICAgY29ubmVjdGlvbjoge1xuICAgICAgICBob3N0OiBFbnYuZ2V0KCdQR19IT1NUJywnMTI3LjAuMC4xJykgYXMgc3RyaW5nLFxuICAgICAgICBwb3J0OiBOdW1iZXIoRW52LmdldCgnUEdfUE9SVCcsNTQzMikpLFxuICAgICAgICB1c2VyOiBFbnYuZ2V0KCdQR19VU0VSJywncG9zdGdyZXMnKSBhcyBzdHJpbmcsXG4gICAgICAgIHBhc3N3b3JkOiBFbnYuZ2V0KCdQR19QQVNTV09SRCcsICcyMDgwc1Bvc3RncmVzJykgYXMgc3RyaW5nLFxuICAgICAgICBkYXRhYmFzZTogRW52LmdldCgnUEdfREJfTkFNRScsJ2RiRmluYWx0ZXN0JykgYXMgc3RyaW5nLFxuICAgICAgfSxcbiAgICAgIGhlYWx0aENoZWNrOiB0cnVlLFxuICAgICAgZGVidWc6IGZhbHNlLFxuICAgIH0sXG5cblxuICB9LFxuXG4gIC8qXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8IE9STSBDb25maWd1cmF0aW9uXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8XG4gIHwgRm9sbG93aW5nIGFyZSBzb21lIG9mIHRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMgdG8gdHdlYWsgdGhlIGNvbnZlbnRpb25hbFxuICB8IHNldHRpbmdzIG9mIHRoZSBPUk0uIEZvciBleGFtcGxlOlxuICB8XG4gIHwgLSBEZWZpbmUgYSBjdXN0b20gZnVuY3Rpb24gdG8gY29tcHV0ZSB0aGUgZGVmYXVsdCB0YWJsZSBuYW1lIGZvciBhIGdpdmVuIG1vZGVsLlxuICB8IC0gT3IgZGVmaW5lIGEgY3VzdG9tIGZ1bmN0aW9uIHRvIGNvbXB1dGUgdGhlIHByaW1hcnkga2V5IGZvciBhIGdpdmVuIG1vZGVsLlxuICB8XG4gICovXG4gIG9ybToge1xuICB9LFxufVxuXG5leHBvcnQgZGVmYXVsdCBkYXRhYmFzZUNvbmZpZ1xuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFbnZfMSIsImNvdl8xeXhlMmZtYmt0IiwicyIsIl9faW1wb3J0RGVmYXVsdCIsImdsb2JhbCIsIlN5bWJvbCIsImZvciIsImRhdGFiYXNlQ29uZmlnIiwiY29ubmVjdGlvbiIsImRlZmF1bHQiLCJnZXQiLCJjb25uZWN0aW9ucyIsInBnIiwiY2xpZW50IiwiaG9zdCIsInBvcnQiLCJOdW1iZXIiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImhlYWx0aENoZWNrIiwiZGVidWciLCJvcm0iLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiZGF0YWJhc2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb25maWcgc291cmNlOiBodHRwczovL2dpdC5pby9KZXNWOVxuICpcbiAqIEZlZWwgZnJlZSB0byBsZXQgdXMga25vdyB2aWEgUFIsIGlmIHlvdSBmaW5kIHNvbWV0aGluZyBicm9rZW4gaW4gdGhpcyBjb25maWdcbiAqIGZpbGUuXG4gKi9cblxuaW1wb3J0IEVudiBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0VudidcbmltcG9ydCB7IE9ybUNvbmZpZyB9IGZyb20gJ0Bpb2M6QWRvbmlzL0x1Y2lkL09ybSdcbmltcG9ydCB7IERhdGFiYXNlQ29uZmlnIH0gZnJvbSAnQGlvYzpBZG9uaXMvTHVjaWQvRGF0YWJhc2UnXG5cbmNvbnN0IGRhdGFiYXNlQ29uZmlnOiBEYXRhYmFzZUNvbmZpZyAmIHsgb3JtOiBQYXJ0aWFsPE9ybUNvbmZpZz4gfSA9IHtcbiAgLypcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIHwgQ29ubmVjdGlvblxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfFxuICB8IFRoZSBwcmltYXJ5IGNvbm5lY3Rpb24gZm9yIG1ha2luZyBkYXRhYmFzZSBxdWVyaWVzIGFjcm9zcyB0aGUgYXBwbGljYXRpb25cbiAgfCBZb3UgY2FuIHVzZSBhbnkga2V5IGZyb20gdGhlIGBjb25uZWN0aW9uc2Agb2JqZWN0IGRlZmluZWQgaW4gdGhpcyBzYW1lXG4gIHwgZmlsZS5cbiAgfFxuICAqL1xuICBjb25uZWN0aW9uOiBFbnYuZ2V0KCdEQl9DT05ORUNUSU9OJyksXG5cbiAgY29ubmVjdGlvbnM6IHtcbiAgICAvKlxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHwgUG9zdGdyZVNRTCBjb25maWdcbiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICB8XG4gICAgfCBDb25maWd1cmF0aW9uIGZvciBQb3N0Z3JlU1FMIGRhdGFiYXNlLiBNYWtlIHN1cmUgdG8gaW5zdGFsbCB0aGUgZHJpdmVyXG4gICAgfCBmcm9tIG5wbSB3aGVuIHVzaW5nIHRoaXMgY29ubmVjdGlvblxuICAgIHxcbiAgICB8IG5wbSBpIHBnXG4gICAgfFxuICAgICovXG4gICAgcGc6IHtcbiAgICAgIGNsaWVudDogJ3BnJyxcbiAgICAgIGNvbm5lY3Rpb246IHtcbiAgICAgICAgaG9zdDogRW52LmdldCgnUEdfSE9TVCcsJzEyNy4wLjAuMScpIGFzIHN0cmluZyxcbiAgICAgICAgcG9ydDogTnVtYmVyKEVudi5nZXQoJ1BHX1BPUlQnLDU0MzIpKSxcbiAgICAgICAgdXNlcjogRW52LmdldCgnUEdfVVNFUicsJ3Bvc3RncmVzJykgYXMgc3RyaW5nLFxuICAgICAgICBwYXNzd29yZDogRW52LmdldCgnUEdfUEFTU1dPUkQnLCAnMjA4MHNQb3N0Z3JlcycpIGFzIHN0cmluZyxcbiAgICAgICAgZGF0YWJhc2U6IEVudi5nZXQoJ1BHX0RCX05BTUUnLCdkYkZpbmFsdGVzdCcpIGFzIHN0cmluZyxcbiAgICAgIH0sXG4gICAgICBoZWFsdGhDaGVjazogdHJ1ZSxcbiAgICAgIGRlYnVnOiBmYWxzZSxcbiAgICB9LFxuXG5cbiAgfSxcblxuICAvKlxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfCBPUk0gQ29uZmlndXJhdGlvblxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfFxuICB8IEZvbGxvd2luZyBhcmUgc29tZSBvZiB0aGUgY29uZmlndXJhdGlvbiBvcHRpb25zIHRvIHR3ZWFrIHRoZSBjb252ZW50aW9uYWxcbiAgfCBzZXR0aW5ncyBvZiB0aGUgT1JNLiBGb3IgZXhhbXBsZTpcbiAgfFxuICB8IC0gRGVmaW5lIGEgY3VzdG9tIGZ1bmN0aW9uIHRvIGNvbXB1dGUgdGhlIGRlZmF1bHQgdGFibGUgbmFtZSBmb3IgYSBnaXZlbiBtb2RlbC5cbiAgfCAtIE9yIGRlZmluZSBhIGN1c3RvbSBmdW5jdGlvbiB0byBjb21wdXRlIHRoZSBwcmltYXJ5IGtleSBmb3IgYSBnaXZlbiBtb2RlbC5cbiAgfFxuICAqL1xuICBvcm06IHtcbiAgfSxcbn1cblxuZXhwb3J0IGRlZmF1bHQgZGF0YWJhc2VDb25maWdcbiJdLCJtYXBwaW5ncyI6IjsraUJBT0EsTUFBQUEsS0FBQSxFQUFBQyxjQUFBLEdBQUFDLENBQUEsTUFBQUMsZUFBQSxDQUFBQyxNQUFBLENBQUFDLE1BQUEsQ0FBQUMsR0FBQSxrQ0FJQSxLQUFNLENBQUFDLGNBQWMsRUFBQU4sY0FBQSxHQUFBQyxDQUFBLE1BQWlELENBV25FTSxVQUFVLENBQUVSLEtBQUEsQ0FBQVMsT0FBRyxDQUFDQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBRXBDQyxXQUFXLENBQUUsQ0FZWEMsRUFBRSxDQUFFLENBQ0ZDLE1BQU0sQ0FBRSxJQUFJLENBQ1pMLFVBQVUsQ0FBRSxDQUNWTSxJQUFJLENBQUVkLEtBQUEsQ0FBQVMsT0FBRyxDQUFDQyxHQUFHLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBVyxDQUM5Q0ssSUFBSSxDQUFFQyxNQUFNLENBQUNoQixLQUFBLENBQUFTLE9BQUcsQ0FBQ0MsR0FBRyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUNyQ08sSUFBSSxDQUFFakIsS0FBQSxDQUFBUyxPQUFHLENBQUNDLEdBQUcsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFXLENBQzdDUSxRQUFRLENBQUVsQixLQUFBLENBQUFTLE9BQUcsQ0FBQ0MsR0FBRyxDQUFDLGFBQWEsQ0FBRSxlQUFlLENBQVcsQ0FDM0RTLFFBQVEsQ0FBRW5CLEtBQUEsQ0FBQVMsT0FBRyxDQUFDQyxHQUFHLENBQUMsWUFBWSxDQUFDLGFBQWEsQyxDQUM3QyxDQUNEVSxXQUFXLENBQUUsSUFBSSxDQUNqQkMsS0FBSyxDQUFFLEssRUFJVixDQWNEQyxHQUFHLENBQUUsRSxDQUVOLEVBQUFyQixjQUFBLEdBQUFDLENBQUEsTUFFRHFCLE9BQUEsQ0FBQWQsT0FBQSxDQUFlRixjQUFjLEMifQ==