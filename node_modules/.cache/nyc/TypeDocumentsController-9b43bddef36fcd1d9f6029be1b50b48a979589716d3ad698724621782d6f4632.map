{"version":3,"file":"TypeDocumentsController.js","sourceRoot":"","sources":["TypeDocumentsController.ts"],"names":[],"mappings":"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","sourcesContent":["import type { HttpContextContract } from '@ioc:Adonis/Core/HttpContext'\nimport TypeDocument from 'App/Models/TypeDocument';\n\nexport default class TypeDocumentsController {\n  public async createTypeDocument({request, response}: HttpContextContract){\n    try{\n      const data_typeDocument = request.all();\n      const typeDocumentObj = new TypeDocument();\n      typeDocumentObj.id = data_typeDocument.id;\n      typeDocumentObj.name = data_typeDocument.name;\n      typeDocumentObj.state = data_typeDocument.state;\n      await typeDocumentObj.save();\n      return response.status(200).json({\"state\": true,\"message\": \"Tipo documento creada exitosamente\"})\n    }catch(e){\n      console.log(`e -> ${e}`)\n      return response.status(500).json({\"state\": false, \"message\": \"Error al crear el tipo de documento\"})\n    }\n  }\n\n  public async getTypeDocument({response}: HttpContextContract){\n    try{\n      const L_typeDocument = await TypeDocument.query().select('id', 'name').where('state',true);\n      return response.status(200).json({\"state\": true, \"typeDocuments\": L_typeDocument})\n    }catch(e){\n      return response.status(500).json({\"state\": false, \"message\": \"Error al listar las Tipo de documentos\"})\n    }\n  }\n\n  public async deleteTypeDocument({request,response}: HttpContextContract){\n    const id = request.param('id_typeDocument')\n    try{\n      await TypeDocument.query().delete().where('id',id)\n      return response.status(200).json({\"state\": true, \"message\": \"Tipo de documento eliminado con exito\"})\n    }catch(e){\n      return response.status(500).json({\"state\": false,\"message\": \"Error al eliminar tipo de documento\"})\n    }\n  }\n\n  public async updateTypeDocument({request,response}: HttpContextContract){\n    const id_typeDocument=request.param('id_typeDocument');\n    const {name,state} = request.all();\n    try{\n      await TypeDocument.query().where('id',id_typeDocument).update({\n        name: name,\n        state: state\n    });\n    return response.status(200).json( {\n      \"state\": true, \"message\": \"Tipo de documento Editada con exito\"})\n    }catch(e){\n      return response.status(500).json({\"state\": false,\"message\": \"Error al editar la Tipo de documento\"})\n    }\n  }\n}\n"]}