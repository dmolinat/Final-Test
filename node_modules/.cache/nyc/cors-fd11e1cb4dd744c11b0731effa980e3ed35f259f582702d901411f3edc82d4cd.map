{"version":3,"file":"cors.js","sourceRoot":"","sources":["cors.ts"],"names":[],"mappings":";;AASA,MAAM,UAAU,GAAe;IAa7B,OAAO,EAAE,KAAK;IAwBd,MAAM,EAAE,IAAI;IAYZ,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC;IAmBjD,OAAO,EAAE,IAAI;IAsBb,aAAa,EAAE;QACb,eAAe;QACf,kBAAkB;QAClB,cAAc;QACd,SAAS;QACT,eAAe;QACf,QAAQ;KACT;IAaD,WAAW,EAAE,IAAI;IAWjB,MAAM,EAAE,EAAE;CACX,CAAA;AAED,kBAAe,UAAU,CAAA","sourcesContent":["/**\n * Config source: https://git.io/JfefC\n *\n * Feel free to let us know via PR, if you find something broken in this config\n * file.\n */\n\nimport type { CorsConfig } from '@ioc:Adonis/Core/Cors'\n\nconst corsConfig: CorsConfig = {\n  /*\n  |--------------------------------------------------------------------------\n  | Enabled\n  |--------------------------------------------------------------------------\n  |\n  | A boolean to enable or disable CORS integration from your AdonisJs\n  | application.\n  |\n  | Setting the value to `true` will enable the CORS for all HTTP request. However,\n  | you can define a function to enable/disable it on per request basis as well.\n  |\n  */\n  enabled: false,\n\n  // You can also use a function that return true or false.\n  // enabled: (request) => request.url().startsWith('/api')\n\n  /*\n  |--------------------------------------------------------------------------\n  | Origin\n  |--------------------------------------------------------------------------\n  |\n  | Set a list of origins to be allowed for `Access-Control-Allow-Origin`.\n  | The value can be one of the following:\n  |\n  | https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin\n  |\n  | Boolean (true)    - Allow current request origin.\n  | Boolean (false)   - Disallow all.\n  | String            - Comma separated list of allowed origins.\n  | Array             - An array of allowed origins.\n  | String (*)        - A wildcard (*) to allow all request origins.\n  | Function          - Receives the current origin string and should return\n  |                     one of the above values.\n  |\n  */\n  origin: true,\n\n  /*\n  |--------------------------------------------------------------------------\n  | Methods\n  |--------------------------------------------------------------------------\n  |\n  | An array of allowed HTTP methods for CORS. The `Access-Control-Request-Method`\n  | is checked against the following list.\n  |\n  | Following is the list of default methods. Feel free to add more.\n  */\n  methods: ['GET', 'HEAD', 'POST', 'PUT', 'DELETE'],\n\n  /*\n  |--------------------------------------------------------------------------\n  | Headers\n  |--------------------------------------------------------------------------\n  |\n  | List of headers to be allowed for `Access-Control-Allow-Headers` header.\n  | The value can be one of the following:\n  |\n  | https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Request-Headers\n  |\n  | Boolean(true)     - Allow all headers mentioned in `Access-Control-Request-Headers`.\n  | Boolean(false)    - Disallow all headers.\n  | String            - Comma separated list of allowed headers.\n  | Array             - An array of allowed headers.\n  | Function          - Receives the current header and should return one of the above values.\n  |\n  */\n  headers: true,\n\n  /*\n  |--------------------------------------------------------------------------\n  | Expose Headers\n  |--------------------------------------------------------------------------\n  |\n  | A list of headers to be exposed by setting `Access-Control-Expose-Headers`.\n  | header. By default following 6 simple response headers are exposed.\n  |\n  | Cache-Control\n  | Content-Language\n  | Content-Type\n  | Expires\n  | Last-Modified\n  | Pragma\n  |\n  | In order to add more headers, simply define them inside the following array.\n  |\n  | https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers\n  |\n  */\n  exposeHeaders: [\n    'cache-control',\n    'content-language',\n    'content-type',\n    'expires',\n    'last-modified',\n    'pragma',\n  ],\n\n  /*\n  |--------------------------------------------------------------------------\n  | Credentials\n  |--------------------------------------------------------------------------\n  |\n  | Toggle `Access-Control-Allow-Credentials` header. If value is set to `true`,\n  | then header will be set, otherwise not.\n  |\n  | https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials\n  |\n  */\n  credentials: true,\n\n  /*\n  |--------------------------------------------------------------------------\n  | MaxAge\n  |--------------------------------------------------------------------------\n  |\n  | Define `Access-Control-Max-Age` header in seconds.\n  | https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age\n  |\n  */\n  maxAge: 90,\n}\n\nexport default corsConfig\n"]}