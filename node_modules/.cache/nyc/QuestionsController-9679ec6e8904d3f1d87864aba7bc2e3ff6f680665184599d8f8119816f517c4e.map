{"version":3,"file":"QuestionsController.js","sourceRoot":"","sources":["QuestionsController.ts"],"names":[],"mappings":"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","sourcesContent":["import type { HttpContextContract } from '@ioc:Adonis/Core/HttpContext'\nimport Question from 'App/Models/Question';\nimport AnswersController from './AnswersController';\n\nexport default class QuestionsController {\n  public async createQuestions({request, response}: HttpContextContract){\n    try{\n      const data_question = request.all();\n      const questionObj = new Question();\n      questionObj.question = data_question.question;\n      questionObj.options = JSON.stringify(data_question.options);\n      questionObj.state = true;\n      await questionObj.save();\n\n      const answerObj = new AnswersController()\n      answerObj.createAnswerQuestion(questionObj.id,data_question.options)\n      return response.status(200).json({\"state\": true,\"message\": \"Pregunta creada exitosamente\"})\n    }catch(e){\n      console.log(`e -> ${e}`)\n      return response.status(500).json({\"state\": false, \"message\": \"Error al crear la pregunta\"})\n    }\n  }\n\n  public async getQuestions({response}: HttpContextContract){\n    try{\n      const L_question = await Question.query().select('question', 'id').where('state',true);\n      return response.status(200).json({\"state\": true, \"questions\": L_question})\n    }catch(e){\n      return response.status(500).json({\"state\": false, \"message\": \"Error al listar las preguntas\"})\n    }\n  }\n\n  public async deleteQuestion({request,response}: HttpContextContract){\n    const id = request.param('id_question')\n    try{\n      await Question.query().delete().where('id',id)\n      return response.status(200).json({\"state\": true, \"message\": \"Pregunta eliminada con exito\"})\n    }catch(e){\n      // console.log(e) OK\n      return response.status(500).json({\"state\": false,\"message\": \"Error al eliminar la pregunta\"})\n    }\n  }\n\n  public async updateQuestion({request,response}: HttpContextContract){\n    const id_question=request.param('id_question');\n    const {question,options,state} = request.all();\n    try{\n      await Question.query().where('id',id_question).update({\n        question: question,\n        options: options,\n        state: state\n    });\n    return response.status(200).json( {\n      \"state\": true, \"message\": \"Pregunta Editada con exito\"})\n    }catch(e){\n      return response.status(500).json({\"state\": false,\"message\": \"Error al editar la pregunta\"})\n    }\n  }\n\n  public async updateQuestionNewAnswer(id_question,options){\n\n    try{\n      await Question.query().where('id',id_question).update({\n        options: JSON.stringify(options),\n    });\n    }catch(e){\n      console.log(`ERROR EN ACTUALIZACION DE RESPUESTA -> ${e}`)\n    }\n  }\n}\n"]}