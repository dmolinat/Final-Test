"use strict";function cov_puvskt5oj(){var path="D:\\Documents\\Universidad Nacional de Colombia\\2023 - 1\\BOOTCAMP_BACKEND\\Final-Test\\config\\drive.ts";var hash="56b7626bae2cf62751f4dd71e1cd8b079d23242f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"D:\\Documents\\Universidad Nacional de Colombia\\2023 - 1\\BOOTCAMP_BACKEND\\Final-Test\\config\\drive.ts",statementMap:{"0":{start:{line:2,column:22},end:{line:4,column:1}},"1":{start:{line:3,column:4},end:{line:3,column:62}},"2":{start:{line:5,column:0},end:{line:5,column:62}},"3":{start:{line:6,column:14},end:{line:6,column:79}},"4":{start:{line:7,column:17},end:{line:7,column:55}},"5":{start:{line:8,column:22},end:{line:8,column:95}},"6":{start:{line:9,column:0},end:{line:20,column:3}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:56},end:{line:2,column:57}},loc:{start:{line:2,column:71},end:{line:4,column:1}},line:2}},branchMap:{"0":{loc:{start:{line:2,column:22},end:{line:4,column:1}},type:"binary-expr",locations:[{start:{line:2,column:23},end:{line:2,column:27}},{start:{line:2,column:31},end:{line:2,column:51}},{start:{line:2,column:56},end:{line:4,column:1}}],line:2},"1":{loc:{start:{line:3,column:11},end:{line:3,column:61}},type:"cond-expr",locations:[{start:{line:3,column:37},end:{line:3,column:40}},{start:{line:3,column:43},end:{line:3,column:61}}],line:3},"2":{loc:{start:{line:3,column:12},end:{line:3,column:33}},type:"binary-expr",locations:[{start:{line:3,column:12},end:{line:3,column:15}},{start:{line:3,column:19},end:{line:3,column:33}}],line:3}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0]},inputSourceMap:{version:3,file:"drive.js",sourceRoot:"",sources:["drive.ts"],names:[],mappings:";;;;;AAOA,gFAAsC;AACtC,wDAAyD;AACzD,gGAAsD;AAWtD,kBAAe,IAAA,oBAAW,EAAC;IAUzB,IAAI,EAAE,aAAG,CAAC,GAAG,CAAC,YAAY,CAAC;IAE3B,KAAK,EAAE;QAUL,KAAK,EAAE;YACL,MAAM,EAAE,OAAO;YACf,UAAU,EAAE,QAAQ;YAWpB,IAAI,EAAE,qBAAW,CAAC,OAAO,CAAC,SAAS,CAAC;YAYpC,UAAU,EAAE,IAAI;YAYhB,QAAQ,EAAE,UAAU;SACrB;KAmEF;CACF,CAAC,CAAA",sourcesContent:["/**\n * Config source: https://git.io/JBt3o\n *\n * Feel free to let us know via PR, if you find something broken in this config\n * file.\n */\n\nimport Env from '@ioc:Adonis/Core/Env'\nimport { driveConfig } from '@adonisjs/core/build/config'\nimport Application from '@ioc:Adonis/Core/Application'\n\n/*\n|--------------------------------------------------------------------------\n| Drive Config\n|--------------------------------------------------------------------------\n|\n| The `DriveConfig` relies on the `DisksList` interface which is\n| defined inside the `contracts` directory.\n|\n*/\nexport default driveConfig({\n  /*\n  |--------------------------------------------------------------------------\n  | Default disk\n  |--------------------------------------------------------------------------\n  |\n  | The default disk to use for managing file uploads. The value is driven by\n  | the `DRIVE_DISK` environment variable.\n  |\n  */\n  disk: Env.get('DRIVE_DISK'),\n\n  disks: {\n    /*\n    |--------------------------------------------------------------------------\n    | Local\n    |--------------------------------------------------------------------------\n    |\n    | Uses the local file system to manage files. Make sure to turn off serving\n    | files when not using this disk.\n    |\n    */\n    local: {\n      driver: 'local',\n      visibility: 'public',\n\n      /*\n      |--------------------------------------------------------------------------\n      | Storage root - Local driver only\n      |--------------------------------------------------------------------------\n      |\n      | Define an absolute path to the storage directory from where to read the\n      | files.\n      |\n      */\n      root: Application.tmpPath('uploads'),\n\n      /*\n      |--------------------------------------------------------------------------\n      | Serve files - Local driver only\n      |--------------------------------------------------------------------------\n      |\n      | When this is set to true, AdonisJS will configure a files server to serve\n      | files from the disk root. This is done to mimic the behavior of cloud\n      | storage services that has inbuilt capabilities to serve files.\n      |\n      */\n      serveFiles: true,\n\n      /*\n      |--------------------------------------------------------------------------\n      | Base path - Local driver only\n      |--------------------------------------------------------------------------\n      |\n      | Base path is always required when \"serveFiles = true\". Also make sure\n      | the `basePath` is unique across all the disks using \"local\" driver and\n      | you are not registering routes with this prefix.\n      |\n      */\n      basePath: '/uploads',\n    },\n\n    /*\n    |--------------------------------------------------------------------------\n    | S3 Driver\n    |--------------------------------------------------------------------------\n    |\n    | Uses the S3 cloud storage to manage files. Make sure to install the s3\n    | drive separately when using it.\n    |\n    |**************************************************************************\n    | npm i @adonisjs/drive-s3\n    |**************************************************************************\n    |\n    */\n    // s3: {\n    //   driver: 's3',\n    //   visibility: 'public',\n    //   key: Env.get('S3_KEY'),\n    //   secret: Env.get('S3_SECRET'),\n    //   region: Env.get('S3_REGION'),\n    //   bucket: Env.get('S3_BUCKET'),\n    //   endpoint: Env.get('S3_ENDPOINT'),\n    //\n    //  // For minio to work\n    //  // forcePathStyle: true,\n    // },\n\n    /*\n    |--------------------------------------------------------------------------\n    | GCS Driver\n    |--------------------------------------------------------------------------\n    |\n    | Uses the Google cloud storage to manage files. Make sure to install the GCS\n    | drive separately when using it.\n    |\n    |**************************************************************************\n    | npm i @adonisjs/drive-gcs\n    |**************************************************************************\n    |\n    */\n    // gcs: {\n    //   driver: 'gcs',\n    //   visibility: 'public',\n    //   keyFilename: Env.get('GCS_KEY_FILENAME'),\n    //   bucket: Env.get('GCS_BUCKET'),\n\n      /*\n      |--------------------------------------------------------------------------\n      | Uniform ACL - Google cloud storage only\n      |--------------------------------------------------------------------------\n      |\n      | When using the Uniform ACL on the bucket, the \"visibility\" option is\n      | ignored. Since, the files ACL is managed by the google bucket policies\n      | directly.\n      |\n      |**************************************************************************\n      | Learn more: https://cloud.google.com/storage/docs/uniform-bucket-level-access\n      |**************************************************************************\n      |\n      | The following option just informs drive whether your bucket is using uniform\n      | ACL or not. The actual setting needs to be toggled within the Google cloud\n      | console.\n      |\n      */\n    //   usingUniformAcl: false,\n    // },\n  },\n})\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"56b7626bae2cf62751f4dd71e1cd8b079d23242f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_puvskt5oj=function(){return actualCoverage;};}return actualCoverage;}cov_puvskt5oj();var __importDefault=(cov_puvskt5oj().s[0]++,(cov_puvskt5oj().b[0][0]++,this)&&(cov_puvskt5oj().b[0][1]++,this.__importDefault)||(cov_puvskt5oj().b[0][2]++,function(mod){cov_puvskt5oj().f[0]++;cov_puvskt5oj().s[1]++;return(cov_puvskt5oj().b[2][0]++,mod)&&(cov_puvskt5oj().b[2][1]++,mod.__esModule)?(cov_puvskt5oj().b[1][0]++,mod):(cov_puvskt5oj().b[1][1]++,{"default":mod});}));cov_puvskt5oj().s[2]++;Object.defineProperty(exports,"__esModule",{value:true});const Env_1=(cov_puvskt5oj().s[3]++,__importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Env")));const config_1=(cov_puvskt5oj().s[4]++,require("@adonisjs/core/build/config"));const Application_1=(cov_puvskt5oj().s[5]++,__importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Application")));cov_puvskt5oj().s[6]++;exports.default=(0,config_1.driveConfig)({disk:Env_1.default.get('DRIVE_DISK'),disks:{local:{driver:'local',visibility:'public',root:Application_1.default.tmpPath('uploads'),serveFiles:true,basePath:'/uploads'}}});//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkcml2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQU9BLGdGQUFzQztBQUN0Qyx3REFBeUQ7QUFDekQsZ0dBQXNEO0FBV3RELGtCQUFlLElBQUEsb0JBQVcsRUFBQztJQVV6QixJQUFJLEVBQUUsYUFBRyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUM7SUFFM0IsS0FBSyxFQUFFO1FBVUwsS0FBSyxFQUFFO1lBQ0wsTUFBTSxFQUFFLE9BQU87WUFDZixVQUFVLEVBQUUsUUFBUTtZQVdwQixJQUFJLEVBQUUscUJBQVcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO1lBWXBDLFVBQVUsRUFBRSxJQUFJO1lBWWhCLFFBQVEsRUFBRSxVQUFVO1NBQ3JCO0tBbUVGO0NBQ0YsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb25maWcgc291cmNlOiBodHRwczovL2dpdC5pby9KQnQzb1xuICpcbiAqIEZlZWwgZnJlZSB0byBsZXQgdXMga25vdyB2aWEgUFIsIGlmIHlvdSBmaW5kIHNvbWV0aGluZyBicm9rZW4gaW4gdGhpcyBjb25maWdcbiAqIGZpbGUuXG4gKi9cblxuaW1wb3J0IEVudiBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0VudidcbmltcG9ydCB7IGRyaXZlQ29uZmlnIH0gZnJvbSAnQGFkb25pc2pzL2NvcmUvYnVpbGQvY29uZmlnJ1xuaW1wb3J0IEFwcGxpY2F0aW9uIGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvQXBwbGljYXRpb24nXG5cbi8qXG58LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbnwgRHJpdmUgQ29uZmlnXG58LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbnxcbnwgVGhlIGBEcml2ZUNvbmZpZ2AgcmVsaWVzIG9uIHRoZSBgRGlza3NMaXN0YCBpbnRlcmZhY2Ugd2hpY2ggaXNcbnwgZGVmaW5lZCBpbnNpZGUgdGhlIGBjb250cmFjdHNgIGRpcmVjdG9yeS5cbnxcbiovXG5leHBvcnQgZGVmYXVsdCBkcml2ZUNvbmZpZyh7XG4gIC8qXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8IERlZmF1bHQgZGlza1xuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgfFxuICB8IFRoZSBkZWZhdWx0IGRpc2sgdG8gdXNlIGZvciBtYW5hZ2luZyBmaWxlIHVwbG9hZHMuIFRoZSB2YWx1ZSBpcyBkcml2ZW4gYnlcbiAgfCB0aGUgYERSSVZFX0RJU0tgIGVudmlyb25tZW50IHZhcmlhYmxlLlxuICB8XG4gICovXG4gIGRpc2s6IEVudi5nZXQoJ0RSSVZFX0RJU0snKSxcblxuICBkaXNrczoge1xuICAgIC8qXG4gICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgfCBMb2NhbFxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHxcbiAgICB8IFVzZXMgdGhlIGxvY2FsIGZpbGUgc3lzdGVtIHRvIG1hbmFnZSBmaWxlcy4gTWFrZSBzdXJlIHRvIHR1cm4gb2ZmIHNlcnZpbmdcbiAgICB8IGZpbGVzIHdoZW4gbm90IHVzaW5nIHRoaXMgZGlzay5cbiAgICB8XG4gICAgKi9cbiAgICBsb2NhbDoge1xuICAgICAgZHJpdmVyOiAnbG9jYWwnLFxuICAgICAgdmlzaWJpbGl0eTogJ3B1YmxpYycsXG5cbiAgICAgIC8qXG4gICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgIHwgU3RvcmFnZSByb290IC0gTG9jYWwgZHJpdmVyIG9ubHlcbiAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgfFxuICAgICAgfCBEZWZpbmUgYW4gYWJzb2x1dGUgcGF0aCB0byB0aGUgc3RvcmFnZSBkaXJlY3RvcnkgZnJvbSB3aGVyZSB0byByZWFkIHRoZVxuICAgICAgfCBmaWxlcy5cbiAgICAgIHxcbiAgICAgICovXG4gICAgICByb290OiBBcHBsaWNhdGlvbi50bXBQYXRoKCd1cGxvYWRzJyksXG5cbiAgICAgIC8qXG4gICAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgIHwgU2VydmUgZmlsZXMgLSBMb2NhbCBkcml2ZXIgb25seVxuICAgICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICB8XG4gICAgICB8IFdoZW4gdGhpcyBpcyBzZXQgdG8gdHJ1ZSwgQWRvbmlzSlMgd2lsbCBjb25maWd1cmUgYSBmaWxlcyBzZXJ2ZXIgdG8gc2VydmVcbiAgICAgIHwgZmlsZXMgZnJvbSB0aGUgZGlzayByb290LiBUaGlzIGlzIGRvbmUgdG8gbWltaWMgdGhlIGJlaGF2aW9yIG9mIGNsb3VkXG4gICAgICB8IHN0b3JhZ2Ugc2VydmljZXMgdGhhdCBoYXMgaW5idWlsdCBjYXBhYmlsaXRpZXMgdG8gc2VydmUgZmlsZXMuXG4gICAgICB8XG4gICAgICAqL1xuICAgICAgc2VydmVGaWxlczogdHJ1ZSxcblxuICAgICAgLypcbiAgICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgfCBCYXNlIHBhdGggLSBMb2NhbCBkcml2ZXIgb25seVxuICAgICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICB8XG4gICAgICB8IEJhc2UgcGF0aCBpcyBhbHdheXMgcmVxdWlyZWQgd2hlbiBcInNlcnZlRmlsZXMgPSB0cnVlXCIuIEFsc28gbWFrZSBzdXJlXG4gICAgICB8IHRoZSBgYmFzZVBhdGhgIGlzIHVuaXF1ZSBhY3Jvc3MgYWxsIHRoZSBkaXNrcyB1c2luZyBcImxvY2FsXCIgZHJpdmVyIGFuZFxuICAgICAgfCB5b3UgYXJlIG5vdCByZWdpc3RlcmluZyByb3V0ZXMgd2l0aCB0aGlzIHByZWZpeC5cbiAgICAgIHxcbiAgICAgICovXG4gICAgICBiYXNlUGF0aDogJy91cGxvYWRzJyxcbiAgICB9LFxuXG4gICAgLypcbiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICB8IFMzIERyaXZlclxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHxcbiAgICB8IFVzZXMgdGhlIFMzIGNsb3VkIHN0b3JhZ2UgdG8gbWFuYWdlIGZpbGVzLiBNYWtlIHN1cmUgdG8gaW5zdGFsbCB0aGUgczNcbiAgICB8IGRyaXZlIHNlcGFyYXRlbHkgd2hlbiB1c2luZyBpdC5cbiAgICB8XG4gICAgfCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAgfCBucG0gaSBAYWRvbmlzanMvZHJpdmUtczNcbiAgICB8KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICB8XG4gICAgKi9cbiAgICAvLyBzMzoge1xuICAgIC8vICAgZHJpdmVyOiAnczMnLFxuICAgIC8vICAgdmlzaWJpbGl0eTogJ3B1YmxpYycsXG4gICAgLy8gICBrZXk6IEVudi5nZXQoJ1MzX0tFWScpLFxuICAgIC8vICAgc2VjcmV0OiBFbnYuZ2V0KCdTM19TRUNSRVQnKSxcbiAgICAvLyAgIHJlZ2lvbjogRW52LmdldCgnUzNfUkVHSU9OJyksXG4gICAgLy8gICBidWNrZXQ6IEVudi5nZXQoJ1MzX0JVQ0tFVCcpLFxuICAgIC8vICAgZW5kcG9pbnQ6IEVudi5nZXQoJ1MzX0VORFBPSU5UJyksXG4gICAgLy9cbiAgICAvLyAgLy8gRm9yIG1pbmlvIHRvIHdvcmtcbiAgICAvLyAgLy8gZm9yY2VQYXRoU3R5bGU6IHRydWUsXG4gICAgLy8gfSxcblxuICAgIC8qXG4gICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgfCBHQ1MgRHJpdmVyXG4gICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgfFxuICAgIHwgVXNlcyB0aGUgR29vZ2xlIGNsb3VkIHN0b3JhZ2UgdG8gbWFuYWdlIGZpbGVzLiBNYWtlIHN1cmUgdG8gaW5zdGFsbCB0aGUgR0NTXG4gICAgfCBkcml2ZSBzZXBhcmF0ZWx5IHdoZW4gdXNpbmcgaXQuXG4gICAgfFxuICAgIHwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgIHwgbnBtIGkgQGFkb25pc2pzL2RyaXZlLWdjc1xuICAgIHwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgIHxcbiAgICAqL1xuICAgIC8vIGdjczoge1xuICAgIC8vICAgZHJpdmVyOiAnZ2NzJyxcbiAgICAvLyAgIHZpc2liaWxpdHk6ICdwdWJsaWMnLFxuICAgIC8vICAga2V5RmlsZW5hbWU6IEVudi5nZXQoJ0dDU19LRVlfRklMRU5BTUUnKSxcbiAgICAvLyAgIGJ1Y2tldDogRW52LmdldCgnR0NTX0JVQ0tFVCcpLFxuXG4gICAgICAvKlxuICAgICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICB8IFVuaWZvcm0gQUNMIC0gR29vZ2xlIGNsb3VkIHN0b3JhZ2Ugb25seVxuICAgICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICB8XG4gICAgICB8IFdoZW4gdXNpbmcgdGhlIFVuaWZvcm0gQUNMIG9uIHRoZSBidWNrZXQsIHRoZSBcInZpc2liaWxpdHlcIiBvcHRpb24gaXNcbiAgICAgIHwgaWdub3JlZC4gU2luY2UsIHRoZSBmaWxlcyBBQ0wgaXMgbWFuYWdlZCBieSB0aGUgZ29vZ2xlIGJ1Y2tldCBwb2xpY2llc1xuICAgICAgfCBkaXJlY3RseS5cbiAgICAgIHxcbiAgICAgIHwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgICAgfCBMZWFybiBtb3JlOiBodHRwczovL2Nsb3VkLmdvb2dsZS5jb20vc3RvcmFnZS9kb2NzL3VuaWZvcm0tYnVja2V0LWxldmVsLWFjY2Vzc1xuICAgICAgfCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAgICB8XG4gICAgICB8IFRoZSBmb2xsb3dpbmcgb3B0aW9uIGp1c3QgaW5mb3JtcyBkcml2ZSB3aGV0aGVyIHlvdXIgYnVja2V0IGlzIHVzaW5nIHVuaWZvcm1cbiAgICAgIHwgQUNMIG9yIG5vdC4gVGhlIGFjdHVhbCBzZXR0aW5nIG5lZWRzIHRvIGJlIHRvZ2dsZWQgd2l0aGluIHRoZSBHb29nbGUgY2xvdWRcbiAgICAgIHwgY29uc29sZS5cbiAgICAgIHxcbiAgICAgICovXG4gICAgLy8gICB1c2luZ1VuaWZvcm1BY2w6IGZhbHNlLFxuICAgIC8vIH0sXG4gIH0sXG59KVxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,